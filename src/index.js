/**
 * synactaclientjs
 * WebApi
 *
 * OpenAPI spec version: v1
 * Contact: bhofmann@agile-is.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Container', 'model/DocumentVersion', 'model/KeyValuePairStringString', 'model/Log', 'model/Organisation', 'model/PrincipalSearchResult', 'model/RecycleBinEntry', 'model/Right', 'model/Role', 'api/AuthorizationApi', 'api/BaseApi', 'api/LoggingApi', 'api/OrganisationApi', 'api/SearchApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Container'), require('./model/DocumentVersion'), require('./model/KeyValuePairStringString'), require('./model/Log'), require('./model/Organisation'), require('./model/PrincipalSearchResult'), require('./model/RecycleBinEntry'), require('./model/Right'), require('./model/Role'), require('./api/AuthorizationApi'), require('./api/BaseApi'), require('./api/LoggingApi'), require('./api/OrganisationApi'), require('./api/SearchApi'));
  }
}(function(ApiClient, Container, DocumentVersion, KeyValuePairStringString, Log, Organisation, PrincipalSearchResult, RecycleBinEntry, Right, Role, AuthorizationApi, BaseApi, LoggingApi, OrganisationApi, SearchApi) {
  'use strict';

  /**
   * WebApi.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Synactaclientjs = require('index'); // See note below*.
   * var xxxSvc = new Synactaclientjs.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Synactaclientjs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Synactaclientjs.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Synactaclientjs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container: Container,
    /**
     * The DocumentVersion model constructor.
     * @property {module:model/DocumentVersion}
     */
    DocumentVersion: DocumentVersion,
    /**
     * The KeyValuePairStringString model constructor.
     * @property {module:model/KeyValuePairStringString}
     */
    KeyValuePairStringString: KeyValuePairStringString,
    /**
     * The Log model constructor.
     * @property {module:model/Log}
     */
    Log: Log,
    /**
     * The Organisation model constructor.
     * @property {module:model/Organisation}
     */
    Organisation: Organisation,
    /**
     * The PrincipalSearchResult model constructor.
     * @property {module:model/PrincipalSearchResult}
     */
    PrincipalSearchResult: PrincipalSearchResult,
    /**
     * The RecycleBinEntry model constructor.
     * @property {module:model/RecycleBinEntry}
     */
    RecycleBinEntry: RecycleBinEntry,
    /**
     * The Right model constructor.
     * @property {module:model/Right}
     */
    Right: Right,
    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role: Role,
    /**
     * The AuthorizationApi service constructor.
     * @property {module:api/AuthorizationApi}
     */
    AuthorizationApi: AuthorizationApi,
    /**
     * The BaseApi service constructor.
     * @property {module:api/BaseApi}
     */
    BaseApi: BaseApi,
    /**
     * The LoggingApi service constructor.
     * @property {module:api/LoggingApi}
     */
    LoggingApi: LoggingApi,
    /**
     * The OrganisationApi service constructor.
     * @property {module:api/OrganisationApi}
     */
    OrganisationApi: OrganisationApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi
  };

  return exports;
}));
